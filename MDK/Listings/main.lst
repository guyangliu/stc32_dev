C251 COMPILER V5.60.0,  main                                                               06/10/23  11:25:01  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\USER\src\main.c XSMALL BROWSE INCDIR(..\..\..\Libraries\boards\inc;
                    -..\..\..\Libraries\startup\inc;..\USER\inc;..\..\..\Libraries\deivers\inc) DEBUG PRINT(.\Listings\main.lst) TABS(2) OBJE
                    -CT(.\Objects\main.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           *     COPYRIGHT NOTICE
    3           *     Copyright (c) 2023,CNU_W.PIE
    4           *     All rights reserved.
    5           *
    6           *     除注明出处外，以下所有内容版权均属胖胖个人所有，未经允许，不得用于商业用途，
    7           *     修改内容时必须保留PP的版权声明。
    8           *     Except where indicated, the copyright of all the contents below is owned by PP
    9           *     and can not be used for commercial purposes without permission.
   10           *     The copyright notice of PP must be preserved when modifying the content.
   11           *
   12           * @file       main.h
   13           * @brief      lv3
   14           * @author     刘臆杨
   15           * @version    v1.0
   16           * @note       NULL
   17           * @date       2023-07-26
   18           ********************************************************************************************************
             -************/
   19          
   20          #include "main.h" //调用“图书馆”
   21          
   22          int i;
   23          int j;
   24          int k;
   25          int auth1 = 0;
   26          int auth2 = 0;
   27          int touch_count = 0;
   28          
   29          int n = 4;
   30          
   31          int cha_p[] = {5, 5, 6, 6}; // 控制开启位势
   32          int cha_pin[] = {8, 1, 2, 8};
   33          
   34          uint8_t dis_numbers[4] = {0}; // 选择显示数字
   35          
   36          static uint8_t vol[4][4] = {
   37              {0, 1, 1, 1}, // 打开第一位
   38              {1, 0, 1, 1}, // 打开第二位
   39              {1, 1, 0, 1}, // 打开第三位
   40              {1, 1, 1, 0}, // 打开第四位
   41          };
   42          
   43          uint8_t numbers[10][8] = {
   44              {1, 1, 1, 1, 1, 1, 0, 0}, // 0
   45              {0, 1, 1, 0, 0, 0, 0, 0}, // 1
   46              {1, 1, 0, 1, 1, 0, 1, 0}, // 2
   47              {1, 1, 1, 1, 0, 0, 1, 0}, // 3
   48              {0, 1, 1, 0, 0, 1, 1, 0}, // 4
   49              {1, 0, 1, 1, 0, 1, 1, 0}, // 5
   50              {1, 0, 1, 1, 1, 1, 1, 0}, // 6
   51              {1, 1, 1, 0, 0, 0, 0, 0}, // 7
   52              {1, 1, 1, 1, 1, 1, 1, 0}, // 8
   53              {1, 1, 1, 1, 0, 1, 1, 0}  // 9
   54          };
   55          
C251 COMPILER V5.60.0,  main                                                               06/10/23  11:25:01  PAGE 2   

   56          // 初始化
   57          void setup()
   58          {
   59   1          Board_Init();
   60   1          for (k = 0; k < 4; k++)
   61   1              GPIO_Init(cha_p[k], cha_pin[k], 3);
   62   1          for (i = 0; i < 8; i++)
   63   1              GPIO_Init(7, 1 << i, 3);
   64   1          GPIO_Init(GPIO_P0, GPIO_Pin_6, GPIO_PullUp);
   65   1          GPIO_Init(GPIO_P0, GPIO_Pin_7, GPIO_PullUp);
   66   1          GPIO_EXTI_Init(GPIO_P0, GPIO_Pin_6, FALLING_EDGE);
   67   1          GPIO_EXTI_Init(GPIO_P0, GPIO_Pin_7, FALLING_EDGE);
   68   1          GPIO_EXTI_Open(GPIO_P0, GPIO_Pin_6);
   69   1          GPIO_EXTI_Open(GPIO_P0, GPIO_Pin_7);
   70   1      }
   71          
   72          // 开启指定位选
   73          void open_bit(int k)
   74          {
   75   1          for (i = 0; i < 4; i++)
   76   1              GPIO_Write_Bit(cha_p[i], cha_pin[i], vol[k][i]);
   77   1      }
   78          
   79          // 为指定位写入数字
   80          void write_number(int k)
   81          {
   82   1          for (i = 0; i < 8; i++)
   83   1              GPIO_Write_Bit(7, 1 << i, numbers[dis_numbers[k]][i]);
   84   1          Ms_Delay(1);
   85   1      }
   86          
   87          void P0_INT_7(void) interrupt P0INT_VECTOR
   88          {
   89   1          GPIO_EXTI_Flag_Read(GPIO_P0);
   90   1          if (Port_Exti_Flag[0])
   91   1          {
   92   2              GPIO_EXTI_Flag_Clear(GPIO_P0);
   93   2              if (Port_Exti_Flag[0] & Port_Pin_7)
   94   2              {
   95   3                  if (dis_numbers[3] == 9)
   96   3                  {
   97   4                      dis_numbers[3] = 0;
   98   4                      if (dis_numbers[2] == 9)
   99   4                      {
  100   5                          dis_numbers[2] = 0;
  101   5                          if (dis_numbers[1] == 9)
  102   5                          {
  103   6                              dis_numbers[1] = 0;
  104   6                              if (dis_numbers[0] == 9)
  105   6                              {
  106   7                                  dis_numbers[0] = 0;
  107   7                                  goto end1;
  108   7                              }
  109   6                              dis_numbers[0] += 1;
  110   6                              goto end1;
  111   6                          }
  112   5                          dis_numbers[1] += 1;
  113   5                          goto end1;
  114   5                      }
  115   4                      dis_numbers[2] += 1;
  116   4                      goto end1;
  117   4                  }
  118   3                  dis_numbers[3] += 1;
  119   3                  goto end1;
  120   3              }
  121   2      
C251 COMPILER V5.60.0,  main                                                               06/10/23  11:25:01  PAGE 3   

  122   2              if (Port_Exti_Flag[0] & Port_Pin_6)
  123   2              {
  124   3                  if (dis_numbers[3] == 0)
  125   3                  {
  126   4                      dis_numbers[3] = 9;
  127   4                      if (dis_numbers[2] == 0)
  128   4                      {
  129   5                          dis_numbers[2] = 9;
  130   5                          if (dis_numbers[1] == 0)
  131   5                          {
  132   6                              dis_numbers[1] = 9;
  133   6                              if (dis_numbers[0] == 0)
  134   6                              {
  135   7                                  dis_numbers[0] = 9;
  136   7                                  goto end1;
  137   7                              }
  138   6                              dis_numbers[0] -= 1;
  139   6                              goto end1;
  140   6                          }
  141   5                          dis_numbers[1] -= 1;
  142   5                          goto end1;
  143   5                      }
  144   4                      dis_numbers[2] -= 1;
  145   4                      goto end1;
  146   4                  }
  147   3                  dis_numbers[3] -= 1;
  148   3                  goto end1;
  149   3              }
  150   2          }
  151   1      end1:;
  152   1      }
  153          
  154          void main()  // 必要的主函数
  155          {            // 主函数大括号
  156   1          setup(); // 培训底板初始化
  157   1          while (1)
  158   1          {
  159   2              for (k = 0; k < 4; k++)
  160   2              {
  161   3                  open_bit(k);
  162   3                  write_number(k);
  163   3                  Ms_Delay(1);
  164   3              }
  165   2          }
  166   1      } // 主函数大括号
  167          
  168          // interrupt 37


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       576     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       130     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       160     ------
C251 COMPILER V5.60.0,  main                                                               06/10/23  11:25:01  PAGE 4   

End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
