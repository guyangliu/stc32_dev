C251 COMPILER V5.60.0,  common                                                             06/10/23  21:56:26  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE common
OBJECT MODULE PLACED IN .\Objects\common.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\..\..\Libraries\startup\src\common.c XSMALL BROWSE INCDIR(..\..\..\
                    -Libraries\boards\inc;..\..\..\Libraries\startup\inc;..\USER\inc;..\..\..\Libraries\deivers\inc) DEBUG PRINT(.\Listings\c
                    -ommon.lst) TABS(2) OBJECT(.\Objects\common.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           *     COPYRIGHT NOTICE
    3           *     Copyright (c) 2023,CNU_W.PIE
    4           *     All rights reserved.
    5           *
    6           *     除注明出处外，以下所有内容版权均属胖胖个人所有，未经允许，不得用于商业用途，
    7           *     修改内容时必须保留PP的版权声明。
    8           *     Except where indicated, the copyright of all the contents below is owned by PP 
    9           *     and can not be used for commercial purposes without permission. 
   10           *     The copyright notice of PP must be preserved when modifying the content.
   11           *
   12           * @file       common.c
   13           * @brief      通用
   14           * @author     胖胖
   15           * @version    v1.0
   16           * @note       NULL
   17           * @date       2023-07-26
   18           ********************************************************************************************************
             -************/
   19          #include "common.h"
   20          #include "intrins.h"
   21           #include "CNU_PIE_GPIO.h"
   22          volatile unsigned int DELAY_MS = 0;
   23          volatile unsigned int DELAY_US = 0;
   24          unsigned long system_clock;
   25           /*******************************************************************************************************
             -*******************
   26           * @brief  设置主时钟频率
   27           * @note   内部调用用户无需关心
   28           * @param[in]  NULL
   29           * @retval  设置的主时钟频率
   30          *********************************************************************************************************
             -******************/
   31          uint32_t System_Clock_Set(void)
   32          {
   33   1        system_clock = FOSC;
   34   1        P_SW2 |= 0x80;//使能访问特殊寄存器
   35   1        switch (system_clock)
   36   1        {
   37   2          case 22118400://22.1184MHz
   38   2            CLKDIV = 0x04; IRTRIM = T22M_ADDR; VRTRIM = VRT27M_ADDR;
   39   2            IRCBAND = 0x02; CLKDIV = 0x00; break;
   40   2          case 24000000://24MHz
   41   2            CLKDIV = 0x04; IRTRIM = T24M_ADDR; VRTRIM = VRT27M_ADDR;
   42   2            IRCBAND = 0x02; CLKDIV = 0x00; break;
   43   2          case 27000000://27MHz
   44   2            CLKDIV = 0x04; IRTRIM = T27M_ADDR; VRTRIM = VRT27M_ADDR;
   45   2            IRCBAND = 0x02; CLKDIV = 0x00; break;
   46   2          case 30000000://30MHz
   47   2            CLKDIV = 0x04; IRTRIM = T30M_ADDR; VRTRIM = VRT27M_ADDR;
   48   2            IRCBAND = 0x02; CLKDIV = 0x00; break;
   49   2          case 33177600://33.1776MHz
   50   2            CLKDIV = 0x04; IRTRIM = T33M_ADDR; VRTRIM = VRT27M_ADDR;
   51   2            IRCBAND = 0x02; CLKDIV = 0x00; break;
   52   2          case 35000000://35MHz
   53   2            CLKDIV = 0x04; IRTRIM = T35M_ADDR; VRTRIM = VRT44M_ADDR;
C251 COMPILER V5.60.0,  common                                                             06/10/23  21:56:26  PAGE 2   

   54   2            IRCBAND = 0x03; CLKDIV = 0x00; break;
   55   2          default://默认35MHz
   56   2            CLKDIV = 0x04; IRTRIM = T35M_ADDR; VRTRIM = VRT44M_ADDR;
   57   2            IRCBAND = 0x03; CLKDIV = 0x00; break;
   58   2        }
   59   1        return system_clock;
   60   1      }
   61           /*******************************************************************************************************
             -*******************
   62           * @brief  延时函数初始化
   63           * @note   内部调用用户无需关心
   64           * @param[in]  NULL
   65           * @retval     NULL
   66          *********************************************************************************************************
             -******************/
   67          void Delay_Init(void)
   68          {
   69   1        DELAY_MS = system_clock / 6000; DELAY_US = system_clock / 7000000;
   70   1        if(system_clock <= 12000000) DELAY_US++;//自适应主时钟
   71   1      }
   72           /*******************************************************************************************************
             -*******************
   73           * @brief  寄存器相关配置
   74           * @note   内部调用用户无需关心
   75           * @param[in]  NULL
   76           * @retval     NULL
   77          *********************************************************************************************************
             -******************/
   78          void Register_Set(void)
   79          {
   80   1        EAXFR = 1;        // 使能访问XFR
   81   1        CKCON = 0x00;     // 设置外部数据总线为最快
   82   1        WTST = 0;
   83   1        P54RST = 1;       // 使P54为复位引脚
   84   1        P_SW2 = 0x80;     // 开启特殊地址访问
   85   1        //if(System_Clock_Set() != 35000000)  WTST = 0;//CPU读取程序存储器的等待时间 0为最快
   86   1        //else WTST = 0x07; //当主频在35MHz时或超频工作，需要设置等待时长，默认为7个时钟周期  
   87   1      #if (1 == EXTERNAL_CRYSTA_ENABLE)
                 XOSCCR = 0xc0;      //启动外部晶振
                 while (!(XOSCCR & 1));  //等待时钟稳定
                 CLKDIV = 0x00;      //时钟不分频
                 CLKSEL = 0x01;      //选择外部晶振
               #else
   93   1        //自动设置系统频率
   94   1        #if (33177600 == FOSC)
   95   1          system_clock = System_Clock_Set();
   96   1        #else
                   system_clock = FOSC;
                 #endif
   99   1      #endif
  100   1         
  101   1        Delay_Init();       //延时函数初始化
  102   1        //ENLVR = 0;        // 禁止开发板低电压复位
  103   1        
  104   1        WTST = 0;
  105   1        P_SW2 |= 0x80;
  106   1        CLKDIV = 0;       //24MHz主频，分频设置
  107   1        
  108   1        P0M0 = 0x00;P0M1 = 0x00;// P0
  109   1        P1M0 = 0x00;P1M1 = 0x00;// P1
  110   1        P2M0 = 0x00;P2M1 = 0x00;// P2
  111   1        P3M0 = 0x00;P3M1 = 0x00;// P3
  112   1        P4M0 = 0x00;P4M1 = 0x00;// P4
  113   1        P5M0 = 0x00;P5M1 = 0x00;// P5
  114   1        P6M0 = 0x00;P6M1 = 0x00;// P6
  115   1        P7M0 = 0x00;P7M1 = 0x00;// P7
C251 COMPILER V5.60.0,  common                                                             06/10/23  21:56:26  PAGE 3   

  116   1        
  117   1        ADCCFG = 0;
  118   1        AUXR = 0;
  119   1        SCON = 0;
  120   1        S2CON = 0;
  121   1        S3CON = 0;
  122   1        S4CON = 0;
  123   1        P_SW1 = 0;
  124   1        IE2 = 0;
  125   1        TMOD = 0;
  126   1      }
  127           /*******************************************************************************************************
             -*******************
  128           * @brief  毫秒级延时函数
  129           * @note   实现毫秒延时，自适应主时钟
  130           * @param[in]  延时时间
  131           * @retval     NULL
  132          *********************************************************************************************************
             -******************/
  133          void Ms_Delay(uint16_t ms)
  134          {
  135   1        uint16_t i;
  136   1        do{
  137   2          i = DELAY_MS;
  138   2          while(--i);
  139   2        }while(--ms);
  140   1      }
  141           /*******************************************************************************************************
             -*******************
  142           * @brief  微秒级延时函数
  143           * @note   实现微秒延时，自适应主时钟，不准确延时
  144           * @param[in]  延时时间
  145           * @retval     NULL
  146          *********************************************************************************************************
             -******************/
  147          void Us_Delay(uint32_t us)
  148          {
  149   1        uint16_t i;
  150   1        do {
  151   2            i = DELAY_US;
  152   2            while(--i);
  153   2           }while(--us);
  154   1      }
  155           /*******************************************************************************************************
             -*******************
  156           * @brief  禁用全局中断
  157           * @note   禁止中断
  158           * @param[in]  NULL
  159           * @retval     NULL
  160          *********************************************************************************************************
             -******************/
  161          void DisableGlobalIRQ(void)
  162          {
  163   1        EA = 0;
  164   1      }
  165           /*******************************************************************************************************
             -*******************
  166           * @brief  开启全局中断
  167           * @note   开始中断
  168           * @param[in]  NULL
  169           * @retval     NULL
  170          *********************************************************************************************************
             -******************/
  171          void EnableGlobalIRQ(void)
  172          {
  173   1        EA = 1;
C251 COMPILER V5.60.0,  common                                                             06/10/23  21:56:26  PAGE 4   

  174   1      }
  175           /*******************************************************************************************************
             -*******************
  176           * @brief  开发板初始化
  177           * @note   寄存器配置+中断是否开启+延时初始化
  178           * @param[in]  NULL
  179           * @retval     NULL
  180          *********************************************************************************************************
             -******************/
  181          void Board_Init(void)
  182          {
  183   1        Register_Set();    //寄存器配置
  184   1        EnableGlobalIRQ();//启用全局中断
  185   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       294     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         8     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        12     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
