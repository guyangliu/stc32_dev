C251 COMPILER V5.60.0,  isr                                                                06/10/23  07:58:29  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE isr
OBJECT MODULE PLACED IN .\Objects\isr.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\USER\src\isr.c XSMALL BROWSE INCDIR(..\..\..\Libraries\boards\inc;.
                    -.\..\..\Libraries\startup\inc;..\USER\inc;..\..\..\Libraries\deivers\inc) DEBUG PRINT(.\Listings\isr.lst) TABS(2) OBJECT
                    -(.\Objects\isr.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           *     COPYRIGHT NOTICE
    3           *     Copyright (c) 2023,CNU_W.PIE
    4           *     All rights reserved.
    5           *
    6           *     除注明出处外，以下所有内容版权均属胖胖个人所有，未经允许，不得用于商业用途，
    7           *     修改内容时必须保留PP的版权声明。
    8           *     Except where indicated, the copyright of all the contents below is owned by PP 
    9           *     and can not be used for commercial purposes without permission. 
   10           *     The copyright notice of PP must be preserved when modifying the content.
   11           *
   12           * @file       isr.c
   13           * @brief      中断服务
   14           * @author     胖胖
   15           * @version    v1.0
   16           * @note       NULL
   17           * @date       2023-07-26
   18           ********************************************************************************************************
             -************/
   19          #include <math.h>
   20          #include <stdio.h>
   21          #include <stdlib.h>
   22          
   23          #include "isr.h"
   24          #include "common.h"
   25          
   26          #include "CNU_PIE_UART.h"
   27          #include "CNU_PIE_EXTI.h"
   28          void UART1_Isr() interrupt 4
   29          {
   30   1          if(UART1_GET_TX_FLAG)
   31   1          {
   32   2              UART1_CLEAR_TX_FLAG;
   33   2              UART_BUSY[1] = 0;
   34   2          }
   35   1          if(UART1_GET_RX_FLAG)
   36   1          {
   37   2              UART1_CLEAR_RX_FLAG;
   38   2            //接收数据寄存器为：SBUF
   39   2          }
   40   1      }
   41          void UART2_Isr() interrupt 8
   42          {
   43   1        if(UART2_GET_TX_FLAG)
   44   1        {
   45   2          UART2_CLEAR_TX_FLAG;
   46   2          UART_BUSY[2] = 0;
   47   2        }
   48   1        if(UART2_GET_RX_FLAG)
   49   1        {
   50   2          UART2_CLEAR_RX_FLAG;
   51   2          //接收数据寄存器为：S2BUF
   52   2        }
   53   1      }
   54          void UART3_Isr() interrupt 17
   55          {
C251 COMPILER V5.60.0,  isr                                                                06/10/23  07:58:29  PAGE 2   

   56   1        if(UART3_GET_TX_FLAG)
   57   1        {
   58   2          UART3_CLEAR_TX_FLAG;
   59   2          UART_BUSY[3] = 0;
   60   2        }
   61   1        if(UART3_GET_RX_FLAG)
   62   1        {
   63   2           UART3_CLEAR_RX_FLAG;
   64   2          //接收数据寄存器为：S3BUF
   65   2        }
   66   1      }
   67          void UART4_Isr() interrupt 18
   68          {
   69   1        if(UART4_GET_TX_FLAG)
   70   1        {
   71   2          UART4_CLEAR_TX_FLAG;
   72   2          UART_BUSY[4] = 0;
   73   2        }
   74   1        if(UART4_GET_RX_FLAG)
   75   1        {
   76   2          UART4_CLEAR_RX_FLAG;
   77   2          //接收数据寄存器为：S4BUF;
   78   2        }
   79   1      }
   80          
   81          
   82          
   83          //void INT0_Isr() interrupt 0
   84          //{
   85          //}
   86          //void INT1_Isr() interrupt 2
   87          //{
   88          //}
   89          //void INT2_Isr() interrupt 10
   90          //{
   91          //}
   92          //void INT3_Isr() interrupt 11
   93          //{
   94          //}
   95          //void INT4_Isr() interrupt 16
   96          //{
   97          //}
   98          //void TM1_Isr() interrupt 3
   99          //{
  100          //}
  101          //void TM2_Isr() interrupt 12
  102          //{
  103          //}
  104          
  105          //void TM4_Isr() interrupt 20
  106          //{
  107          //}
  108          //void DMA_ADC_ISR_Handler (void) interrupt ADCDMA_VECTOR
  109          //{
  110          //}
  111          //void  INT0_Isr()  interrupt 0;
  112          //void  TM0_Isr()   interrupt 1;
  113          //void  INT1_Isr()  interrupt 2;id  TM1_Isr()   interrupt 3;
  114          //void  UART1_Isr() interrupt 4;
  115          //void  ADC_Isr()   interrupt 5;
  116          //void  LVD_Isr()   interrupt 6;
  117          //void  PCA_Isr()   interrupt 7;
  118          //void  UART2_Isr() interrupt 8;
  119          //void  SPI_Isr()   interrupt 9;
  120          //void  INT2_Isr()  interrupt 10;
  121          //void  INT3_Isr()  interrupt 11;
C251 COMPILER V5.60.0,  isr                                                                06/10/23  07:58:29  PAGE 3   

  122          //void  TM2_Isr()   interrupt 12;
  123          //void  INT4_Isr()  interrupt 16;
  124          //void  UART3_Isr() interrupt 17;
  125          //void  UART4_Isr() interrupt 18;
  126          //void  TM3_Isr()   interrupt 19;
  127          //void  TM4_Isr()   interrupt 20;
  128          //void  CMP_Isr()   interrupt 21;
  129          //void  I2C_Isr()   interrupt 24;
  130          //void  USB_Isr()   interrupt 25;
  131          //void  PWM1_Isr()  interrupt 26;
  132          //void  PWM2_Isr()  interrupt 27;


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       116     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
