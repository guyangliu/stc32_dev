C251 COMPILER V5.60.0,  CNU_PIE_GPIO                                                       11/10/23  09:28:31  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE CNU_PIE_GPIO
OBJECT MODULE PLACED IN .\Objects\CNU_PIE_GPIO.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\..\..\Libraries\deivers\src\CNU_PIE_GPIO.c XSMALL BROWSE INCDIR(..\
                    -..\..\Libraries\boards\inc;..\..\..\Libraries\startup\inc;..\USER\inc;..\..\..\Libraries\deivers\inc) DEBUG PRINT(.\List
                    -ings\CNU_PIE_GPIO.lst) TABS(2) OBJECT(.\Objects\CNU_PIE_GPIO.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           *     COPYRIGHT NOTICE
    3           *     Copyright (c) 2023,CNU_W.PIE
    4           *     All rights reserved.
    5           *
    6           *     除注明出处外，以下所有内容版权均属胖胖个人所有，未经允许，不得用于商业用途，
    7           *     修改内容时必须保留PP的版权声明。
    8           *     Except where indicated, the copyright of all the contents below is owned by PP 
    9           *     and can not be used for commercial purposes without permission. 
   10           *     The copyright notice of PP must be preserved when modifying the content.
   11           *
   12           * @file       CNU_PIE_GPIO.c
   13           * @brief      GPIO
   14           * @author     胖胖
   15           * @version    v1.0
   16           * @note       NULL
   17           * @date       2023-07-26
   18           ********************************************************************************************************
             -************/
   19           #include "CNU_PIE_GPIO.h"
   20           
   21           /*******************************************************************************************************
             -*******************
   22           * @brief  初始化GPIO引脚
   23           * @exampleCode
   24          GPIO_Init(GPIO_P0, GPIO_Pin_0, GPIO_PullUp); //初始化P00引脚并设置为准双向IO
   25           * @endcode
   26           * @param[in]  GPIO_Port GPIO端口号
   27           * @param[in]  GPIO_Pin  GPIO引脚号              
   28           * @param[in]  GPIO_Mode GPIO引脚配置
   29          *********************************************************************************************************
             -******************/
   30          void GPIO_Init(GPIO_Port_enum GPIO_Port , GPIO_Pin_enum GPIO_Pin , GPIO_Mode_enum GPIO_Mode)
   31           {
   32   1         switch (GPIO_Port)
   33   1         {
   34   2           case GPIO_P0://端口0
   35   2             switch (GPIO_Mode)
   36   2             {
   37   3               case GPIO_PullUp:
   38   3                 P0M1 &= ~GPIO_Pin, P0M0 &= ~GPIO_Pin;   break;//上拉准双向口      
   39   3               case GPIO_HighZ:
   40   3                 P0M1 |=  GPIO_Pin, P0M0 &= ~GPIO_Pin;   break;//高阻输入
   41   3               case GPIO_OUT_OD:
   42   3                 P0M1 |=  GPIO_Pin, P0M0 |=  GPIO_Pin;   break;//开漏输出
   43   3               case GPIO_OUT_PP:
   44   3                 P0M1 &= ~GPIO_Pin, P0M0 |=  GPIO_Pin;   break;//推挽输出
   45   3               default:
   46   3               break;//初始化失败
   47   3             }break;
   48   2           case GPIO_P1://端口1
   49   2             switch (GPIO_Mode)
   50   2             {
   51   3               case GPIO_PullUp:
   52   3                 P1M1 &= ~GPIO_Pin, P1M0 &= ~GPIO_Pin;   break;//上拉准双向口      
   53   3               case GPIO_HighZ:
C251 COMPILER V5.60.0,  CNU_PIE_GPIO                                                       11/10/23  09:28:31  PAGE 2   

   54   3                 P1M1 |=  GPIO_Pin, P1M0 &= ~GPIO_Pin;   break;//高阻输入
   55   3               case GPIO_OUT_OD:
   56   3                 P1M1 |=  GPIO_Pin, P1M0 |=  GPIO_Pin;   break;//开漏输出
   57   3               case GPIO_OUT_PP:
   58   3                 P1M1 &= ~GPIO_Pin, P1M0 |=  GPIO_Pin;   break;//推挽输出
   59   3               default:
   60   3               break;//初始化失败
   61   3             }break;    
   62   2           case GPIO_P2://端口2
   63   2             switch (GPIO_Mode)
   64   2             {
   65   3               case GPIO_PullUp:
   66   3                 P2M1 &= ~GPIO_Pin, P2M0 &= ~GPIO_Pin;   break;//上拉准双向口      
   67   3               case GPIO_HighZ:
   68   3                 P2M1 |=  GPIO_Pin, P2M0 &= ~GPIO_Pin;   break;//高阻输入
   69   3               case GPIO_OUT_OD:
   70   3                 P2M1 |=  GPIO_Pin, P2M0 |=  GPIO_Pin;   break;//开漏输出
   71   3               case GPIO_OUT_PP:
   72   3                 P2M1 &= ~GPIO_Pin, P2M0 |=  GPIO_Pin;   break;//推挽输出
   73   3               default:
   74   3               break;//初始化失败
   75   3             }break;    
   76   2           case GPIO_P3://端口3
   77   2             switch (GPIO_Mode)
   78   2             {
   79   3               case GPIO_PullUp:
   80   3                 P3M1 &= ~GPIO_Pin, P3M0 &= ~GPIO_Pin;   break;//上拉准双向口      
   81   3               case GPIO_HighZ:
   82   3                 P3M1 |=  GPIO_Pin, P3M0 &= ~GPIO_Pin;   break;//高阻输入
   83   3               case GPIO_OUT_OD:
   84   3                 P3M1 |=  GPIO_Pin, P3M0 |=  GPIO_Pin;   break;//开漏输出
   85   3               case GPIO_OUT_PP:
   86   3                 P3M1 &= ~GPIO_Pin, P3M0 |=  GPIO_Pin;   break;//推挽输出
   87   3               default:
   88   3               break;//初始化失败
   89   3             }break;  
   90   2           case GPIO_P4://端口4
   91   2             switch (GPIO_Mode)
   92   2             {
   93   3               case GPIO_PullUp:
   94   3                 P4M1 &= ~GPIO_Pin, P4M0 &= ~GPIO_Pin;   break;//上拉准双向口      
   95   3               case GPIO_HighZ:
   96   3                 P4M1 |=  GPIO_Pin, P4M0 &= ~GPIO_Pin;   break;//高阻输入
   97   3               case GPIO_OUT_OD:
   98   3                 P4M1 |=  GPIO_Pin, P4M0 |=  GPIO_Pin;   break;//开漏输出
   99   3               case GPIO_OUT_PP:
  100   3                 P4M1 &= ~GPIO_Pin, P4M0 |=  GPIO_Pin;   break;//推挽输出
  101   3               default:
  102   3               break;//初始化失败
  103   3             }break;  
  104   2           case GPIO_P5://端口5
  105   2             switch (GPIO_Mode)
  106   2             {
  107   3               case GPIO_PullUp:
  108   3                 P5M1 &= ~GPIO_Pin, P5M0 &= ~GPIO_Pin;   break;//上拉准双向口      
  109   3               case GPIO_HighZ:
  110   3                 P5M1 |=  GPIO_Pin, P5M0 &= ~GPIO_Pin;   break;//高阻输入
  111   3               case GPIO_OUT_OD:
  112   3                 P5M1 |=  GPIO_Pin, P5M0 |=  GPIO_Pin;   break;//开漏输出
  113   3               case GPIO_OUT_PP:
  114   3                 P5M1 &= ~GPIO_Pin, P5M0 |=  GPIO_Pin;   break;//推挽输出
  115   3               default:
  116   3               break;//初始化失败
  117   3             }break;    
  118   2           case GPIO_P6://端口6
  119   2             switch (GPIO_Mode)
C251 COMPILER V5.60.0,  CNU_PIE_GPIO                                                       11/10/23  09:28:31  PAGE 3   

  120   2             {
  121   3               case GPIO_PullUp:
  122   3                 P6M1 &= ~GPIO_Pin, P6M0 &= ~GPIO_Pin;   break;//上拉准双向口      
  123   3               case GPIO_HighZ:
  124   3                 P6M1 |=  GPIO_Pin, P6M0 &= ~GPIO_Pin;   break;//高阻输入
  125   3               case GPIO_OUT_OD:
  126   3                 P6M1 |=  GPIO_Pin, P6M0 |=  GPIO_Pin;   break;//开漏输出
  127   3               case GPIO_OUT_PP:
  128   3                 P6M1 &= ~GPIO_Pin, P6M0 |=  GPIO_Pin;   break;//推挽输出
  129   3               default:
  130   3               break;//初始化失败
  131   3             }break;
  132   2           case GPIO_P7://端口7
  133   2             switch (GPIO_Mode)
  134   2             {
  135   3               case GPIO_PullUp:
  136   3                 P7M1 &= ~GPIO_Pin, P7M0 &= ~GPIO_Pin;   break;//上拉准双向口      
  137   3               case GPIO_HighZ:
  138   3                 P7M1 |=  GPIO_Pin, P7M0 &= ~GPIO_Pin;   break;//高阻输入
  139   3               case GPIO_OUT_OD:
  140   3                 P7M1 |=  GPIO_Pin, P7M0 |=  GPIO_Pin;   break;//开漏输出
  141   3               case GPIO_OUT_PP:
  142   3                 P7M1 &= ~GPIO_Pin, P7M0 |=  GPIO_Pin;   break;//推挽输出
  143   3               default:
  144   3               break;//初始化失败
  145   3             }break;
  146   2           default:
  147   2            break;         
  148   2         }
  149   1       }
  150           /*******************************************************************************************************
             -*******************
  151           * @brief  设置GPIO引脚上拉电阻 -4.1k
  152           * @exampleCode
  153           *      uint8_t status ; //用于存储初始化状态
  154           *      status = GPIO_PinPullConfig(GPIO_P0, GPIO_Pin_0, GPIO_Pull_Up); //设置P00引脚上拉4.1k电阻
  155           * @endcode
  156           * @param[in]  GPIO_Port GPIO端口号
  157           * @param[in]  GPIO_Pin  GPIO引脚号              
  158           * @param[in]  GPIO_Pin_Config GPIO引脚是否上拉电阻
  159           * @retval 0 失败
  160           * @retval 1 成功
  161          *********************************************************************************************************
             -******************/
  162          uint8_t GPIO_PinPullConfig(GPIO_Port_enum GPIO_Port , GPIO_Pin_enum GPIO_Pin , GPIO_PinConfig GPIO_Pin_Co
             -nfig)
  163           {
  164   1         if(GPIO_Port > GPIO_P7)             return FAIL; //初始化错误值返回FAIL
  165   1         if(GPIO_Pin  > GPIO_Pin_All)        return FAIL; //初始化错误值返回FAIL
  166   1         if(GPIO_Pin_Config > GPIO_NO_PULL)  return FAIL; //初始化错误值返回FAIL
  167   1         
  168   1         switch (GPIO_Port)
  169   1         {
  170   2           case GPIO_P0://端口0
  171   2             switch (GPIO_Pin_Config)
  172   2             {
  173   3               case GPIO_NO_PULL:
  174   3                 P0PU &= ~GPIO_Pin;  break;//引脚不配置上拉电阻  
  175   3               case GPIO_Pull_Up:
  176   3                 P0PU |=  GPIO_Pin;   break;//引脚配置上拉电阻
  177   3               default:
  178   3                 return FAIL; break;//初始化失败
  179   3             }break;
  180   2           case GPIO_P1://端口1
  181   2             switch (GPIO_Pin_Config)
  182   2             {
C251 COMPILER V5.60.0,  CNU_PIE_GPIO                                                       11/10/23  09:28:31  PAGE 4   

  183   3               case GPIO_NO_PULL:
  184   3                 P1PU &= ~GPIO_Pin;  break;
  185   3               case GPIO_Pull_Up:
  186   3                 P1PU |=  GPIO_Pin;   break;
  187   3               default:
  188   3                 return FAIL; break;
  189   3             }break;    
  190   2           case GPIO_P2://端口2
  191   2             switch (GPIO_Pin_Config)
  192   2             {
  193   3               case GPIO_NO_PULL:
  194   3                 P2PU &= ~GPIO_Pin;  break;
  195   3               case GPIO_Pull_Up:
  196   3                 P2PU |=  GPIO_Pin;   break;
  197   3               default:
  198   3                 return FAIL; break;
  199   3             }break;    
  200   2           case GPIO_P3://端口3
  201   2             switch (GPIO_Pin_Config)
  202   2             {
  203   3               case GPIO_NO_PULL:
  204   3                 P3PU &= ~GPIO_Pin;  break;
  205   3               case GPIO_Pull_Up:
  206   3                 P3PU |=  GPIO_Pin;   break;
  207   3               default:
  208   3                 return FAIL; break;
  209   3             }break;  
  210   2           case GPIO_P4://端口4
  211   2             switch (GPIO_Pin_Config)
  212   2             {
  213   3               case GPIO_NO_PULL:
  214   3                 P4PU &= ~GPIO_Pin;  break;
  215   3               case GPIO_Pull_Up:
  216   3                 P4PU |=  GPIO_Pin;   break;
  217   3               default:
  218   3                 return FAIL; break;
  219   3             }break;  
  220   2           case GPIO_P5://端口5
  221   2             switch (GPIO_Pin_Config)
  222   2             {
  223   3               case GPIO_NO_PULL:
  224   3                 P5PU &= ~GPIO_Pin;  break;
  225   3               case GPIO_Pull_Up:
  226   3                 P5PU |=  GPIO_Pin;   break;
  227   3               default:
  228   3                 return FAIL; break;
  229   3             }break;    
  230   2           case GPIO_P6://端口6
  231   2             switch (GPIO_Pin_Config)
  232   2             {
  233   3               case GPIO_NO_PULL:
  234   3                 P6PU &= ~GPIO_Pin;  break;
  235   3               case GPIO_Pull_Up:
  236   3                 P6PU |=  GPIO_Pin;   break;
  237   3               default:
  238   3                 return FAIL; break;
  239   3             }break;
  240   2           case GPIO_P7://端口7
  241   2             switch (GPIO_Pin_Config)
  242   2             {
  243   3               case GPIO_NO_PULL:
  244   3                 P7PU &= ~GPIO_Pin;  break;
  245   3               case GPIO_Pull_Up:
  246   3                 P7PU |=  GPIO_Pin;   break;
  247   3               default:
  248   3                 return FAIL; break;
C251 COMPILER V5.60.0,  CNU_PIE_GPIO                                                       11/10/23  09:28:31  PAGE 5   

  249   3             }break;
  250   2           default:
  251   2             return FAIL; break;         
  252   2         }
  253   1        return SUCCEED; //成功
  254   1       }
  255           /*******************************************************************************************************
             -*******************
  256           * @brief  设置GPIO引脚电平
  257           * @exampleCode
  258           *     GPIO_Write_Bit(GPIO_P0, GPIO_Pin_0, 1); //设置P00引脚为高电平
  259           * @endcode
  260           * @param[in]  GPIO_Port GPIO端口号
  261           * @param[in]  GPIO_Pin  GPIO引脚号              
  262           * @param[in]  data_t    GPIO引脚电平
  263          *********************************************************************************************************
             -******************/
  264          void GPIO_Write_Bit(GPIO_Port_enum GPIO_Port , GPIO_Pin_enum GPIO_Pin , uint8_t data_t)
  265           {
  266   1         
  267   1         switch (GPIO_Port)
  268   1         {
  269   2           case GPIO_P0://端口0
  270   2             switch (data_t)
  271   2             {
  272   3               case GPIO_LOW:
  273   3                 P0 &= ~GPIO_Pin;  break;//引脚电平拉低  
  274   3               case GPIO_HIGH:
  275   3                 P0 |=  GPIO_Pin;   break;//引脚电平拉高
  276   3               default:
  277   3                 break;//初始化失败
  278   3             }break;
  279   2           case GPIO_P1://端口1
  280   2             switch (data_t)
  281   2             {
  282   3               case GPIO_LOW:
  283   3                 P1 &= ~GPIO_Pin;  break;
  284   3               case GPIO_HIGH:
  285   3                 P1 |=  GPIO_Pin;   break;
  286   3               default:
  287   3               break;
  288   3             }break;    
  289   2           case GPIO_P2://端口2
  290   2             switch (data_t)
  291   2             {
  292   3               case GPIO_LOW:
  293   3                 P2 &= ~GPIO_Pin;  break;
  294   3               case GPIO_HIGH:
  295   3                 P2 |=  GPIO_Pin;   break;
  296   3               default:
  297   3                break;
  298   3             }break;    
  299   2           case GPIO_P3://端口3
  300   2             switch (data_t)
  301   2             {
  302   3               case GPIO_LOW:
  303   3                 P3 &= ~GPIO_Pin;  break;
  304   3               case GPIO_HIGH:
  305   3                 P3 |=  GPIO_Pin;   break;
  306   3               default:
  307   3                break;
  308   3             }break;  
  309   2           case GPIO_P4://端口4
  310   2             switch (data_t)
  311   2             {
  312   3               case GPIO_LOW:
C251 COMPILER V5.60.0,  CNU_PIE_GPIO                                                       11/10/23  09:28:31  PAGE 6   

  313   3                 P4 &= ~GPIO_Pin;  break;
  314   3               case GPIO_HIGH:
  315   3                 P4 |=  GPIO_Pin;   break;
  316   3               default:
  317   3                break;
  318   3             }break;  
  319   2           case GPIO_P5://端口5
  320   2             switch (data_t)
  321   2             {
  322   3               case GPIO_LOW:
  323   3                 P5 &= ~GPIO_Pin;  break;
  324   3               case GPIO_HIGH:
  325   3                 P5 |=  GPIO_Pin;   break;
  326   3               default:
  327   3                break;
  328   3             }break;    
  329   2           case GPIO_P6://端口6
  330   2             switch (data_t)
  331   2             {
  332   3               case GPIO_LOW:
  333   3                 P6 &= ~GPIO_Pin;  break;
  334   3               case GPIO_HIGH:
  335   3                 P6 |=  GPIO_Pin;   break;
  336   3               default:
  337   3                 break;
  338   3             }break;
  339   2           case GPIO_P7://端口7
  340   2             switch (data_t)
  341   2             {
  342   3               case GPIO_LOW:
  343   3                 P7 &= ~GPIO_Pin;  break;
  344   3               case GPIO_HIGH:
  345   3                 P7 |=  GPIO_Pin;   break;
  346   3               default:
  347   3                 break;
  348   3             }break;
  349   2             default:
  350   2             break;        
  351   2         }  
  352   1       }
  353           /*******************************************************************************************************
             -*******************
  354           * @brief  读取GPIO引脚电平
  355           * @exampleCode
  356           *      uint8_t status ; //用于存储引脚电平
  357           *      status = GPIO_Read_Bit(GPIO_P0, GPIO_Pin_0); //读取P00引脚电平
  358           * @endcode
  359           * @param[in]  GPIO_Port GPIO端口号
  360           * @param[in]  GPIO_Pin  GPIO引脚号              
  361           * @retval 0 低电平
  362           * @retval 1 高电平
  363          *********************************************************************************************************
             -******************/
  364          uint8_t GPIO_Read_Bit(GPIO_Port_enum GPIO_Port , GPIO_Pin_enum GPIO_Pin)
  365           {
  366   1         uint8_t Bit_Value;
  367   1         switch (GPIO_Port)
  368   1         {
  369   2           case GPIO_P0://端口0
  370   2             switch (GPIO_Pin)
  371   2             {
  372   3               case GPIO_Pin_0: Bit_Value = P00; return Bit_Value; break;
  373   3               case GPIO_Pin_1: Bit_Value = P01; return Bit_Value; break;
  374   3               case GPIO_Pin_2: Bit_Value = P02; return Bit_Value; break;
  375   3               case GPIO_Pin_3: Bit_Value = P03; return Bit_Value; break;
  376   3               case GPIO_Pin_4: Bit_Value = P04; return Bit_Value; break;
C251 COMPILER V5.60.0,  CNU_PIE_GPIO                                                       11/10/23  09:28:31  PAGE 7   

  377   3               case GPIO_Pin_5: Bit_Value = P05; return Bit_Value; break;
  378   3               case GPIO_Pin_6: Bit_Value = P06; return Bit_Value; break;
  379   3               case GPIO_Pin_7: Bit_Value = P07; return Bit_Value; break;
  380   3               default:  return FAIL ;break;  
  381   3             }break;
  382   2           case GPIO_P1://端口1
  383   2             switch (GPIO_Pin)
  384   2             {
  385   3               case GPIO_Pin_0: Bit_Value = P10; return Bit_Value; break;
  386   3               case GPIO_Pin_1: Bit_Value = P11; return Bit_Value; break;
  387   3               case GPIO_Pin_2: Bit_Value = P12; return Bit_Value; break;
  388   3               case GPIO_Pin_3: Bit_Value = P13; return Bit_Value; break;
  389   3               case GPIO_Pin_4: Bit_Value = P14; return Bit_Value; break;
  390   3               case GPIO_Pin_5: Bit_Value = P15; return Bit_Value; break;
  391   3               case GPIO_Pin_6: Bit_Value = P16; return Bit_Value; break;
  392   3               case GPIO_Pin_7: Bit_Value = P17; return Bit_Value; break;
  393   3               default:  return FAIL ;break;  
  394   3             }break;       
  395   2          case GPIO_P2://端口2
  396   2             switch (GPIO_Pin)
  397   2             {
  398   3               case GPIO_Pin_0: Bit_Value = P20; return Bit_Value; break;
  399   3               case GPIO_Pin_1: Bit_Value = P21; return Bit_Value; break;
  400   3               case GPIO_Pin_2: Bit_Value = P22; return Bit_Value; break;
  401   3               case GPIO_Pin_3: Bit_Value = P23; return Bit_Value; break;
  402   3               case GPIO_Pin_4: Bit_Value = P24; return Bit_Value; break;
  403   3               case GPIO_Pin_5: Bit_Value = P25; return Bit_Value; break;
  404   3               case GPIO_Pin_6: Bit_Value = P26; return Bit_Value; break;
  405   3               case GPIO_Pin_7: Bit_Value = P27; return Bit_Value; break;
  406   3               default:  return FAIL ;break;  
  407   3             }break;
  408   2          case GPIO_P3://端口3
  409   2             switch (GPIO_Pin)
  410   2             {
  411   3               case GPIO_Pin_0: Bit_Value = P30; return Bit_Value; break;
  412   3               case GPIO_Pin_1: Bit_Value = P31; return Bit_Value; break;
  413   3               case GPIO_Pin_2: Bit_Value = P32; return Bit_Value; break;
  414   3               case GPIO_Pin_3: Bit_Value = P33; return Bit_Value; break;
  415   3               case GPIO_Pin_4: Bit_Value = P34; return Bit_Value; break;
  416   3               case GPIO_Pin_5: Bit_Value = P35; return Bit_Value; break;
  417   3               case GPIO_Pin_6: Bit_Value = P36; return Bit_Value; break;
  418   3               case GPIO_Pin_7: Bit_Value = P37; return Bit_Value; break;
  419   3               default:  return FAIL ;break;  
  420   3             }break;       
  421   2          case GPIO_P4://端口4
  422   2             switch (GPIO_Pin)
  423   2             {
  424   3               case GPIO_Pin_0: Bit_Value = P40; return Bit_Value; break;
  425   3               case GPIO_Pin_1: Bit_Value = P41; return Bit_Value; break;
  426   3               case GPIO_Pin_2: Bit_Value = P42; return Bit_Value; break;
  427   3               case GPIO_Pin_3: Bit_Value = P43; return Bit_Value; break;
  428   3               case GPIO_Pin_4: Bit_Value = P44; return Bit_Value; break;
  429   3               case GPIO_Pin_5: Bit_Value = P45; return Bit_Value; break;
  430   3               case GPIO_Pin_6: Bit_Value = P46; return Bit_Value; break;
  431   3               case GPIO_Pin_7: Bit_Value = P47; return Bit_Value; break;
  432   3               default:  return FAIL ;break;  
  433   3             }break;     
  434   2          case GPIO_P5://端口5
  435   2             switch (GPIO_Pin)
  436   2             {
  437   3               case GPIO_Pin_0: Bit_Value = P50; return Bit_Value; break;
  438   3               case GPIO_Pin_1: Bit_Value = P51; return Bit_Value; break;
  439   3               case GPIO_Pin_2: Bit_Value = P52; return Bit_Value; break;
  440   3               case GPIO_Pin_3: Bit_Value = P53; return Bit_Value; break;
  441   3               case GPIO_Pin_4: Bit_Value = P54; return Bit_Value; break;
  442   3               case GPIO_Pin_5: Bit_Value = P55; return Bit_Value; break;
C251 COMPILER V5.60.0,  CNU_PIE_GPIO                                                       11/10/23  09:28:31  PAGE 8   

  443   3               default:  return FAIL ;break;  
  444   3             }break;      
  445   2          case GPIO_P6://端口6
  446   2             switch (GPIO_Pin)
  447   2             {
  448   3               case GPIO_Pin_0: Bit_Value = P60; return Bit_Value; break;
  449   3               case GPIO_Pin_1: Bit_Value = P61; return Bit_Value; break;
  450   3               case GPIO_Pin_2: Bit_Value = P62; return Bit_Value; break;
  451   3               case GPIO_Pin_3: Bit_Value = P63; return Bit_Value; break;
  452   3               case GPIO_Pin_4: Bit_Value = P64; return Bit_Value; break;
  453   3               case GPIO_Pin_5: Bit_Value = P65; return Bit_Value; break;
  454   3               case GPIO_Pin_6: Bit_Value = P66; return Bit_Value; break;
  455   3               case GPIO_Pin_7: Bit_Value = P67; return Bit_Value; break;
  456   3               default:  return FAIL ;break;  
  457   3             }break;
  458   2          case GPIO_P7://端口6
  459   2             switch (GPIO_Pin)
  460   2             {
  461   3               case GPIO_Pin_0: Bit_Value = P70; return Bit_Value; break;
  462   3               case GPIO_Pin_1: Bit_Value = P71; return Bit_Value; break;
  463   3               case GPIO_Pin_2: Bit_Value = P72; return Bit_Value; break;
  464   3               case GPIO_Pin_3: Bit_Value = P73; return Bit_Value; break;
  465   3               case GPIO_Pin_4: Bit_Value = P74; return Bit_Value; break;
  466   3               case GPIO_Pin_5: Bit_Value = P75; return Bit_Value; break;
  467   3               case GPIO_Pin_6: Bit_Value = P76; return Bit_Value; break;
  468   3               case GPIO_Pin_7: Bit_Value = P77; return Bit_Value; break;
  469   3               default:  return FAIL ;break;  
  470   3             }break;
  471   2             default:  return FAIL ;break;         
  472   2         }
  473   1      }
  474           /*******************************************************************************************************
             -*******************
  475           * @brief  翻转GPIO引脚电平
  476           * @exampleCode
  477           *      uint8_t status ; //用于存储初始化状态
  478           *      status = GPIO_Write_Bit(GPIO_P0, GPIO_Pin_0); //翻转P00引脚电平
  479           * @endcode
  480           * @param[in]  GPIO_Port GPIO端口号
  481           * @param[in]  GPIO_Pin  GPIO引脚号              
  482          *********************************************************************************************************
             -******************/
  483          void GPIO_Toggle_Bit(GPIO_Port_enum GPIO_Port , GPIO_Pin_enum GPIO_Pin)
  484           {
  485   1        
  486   1         
  487   1         switch (GPIO_Port)
  488   1         {
  489   2           case GPIO_P0:  P0 ^= GPIO_Pin ; break; //端口0     
  490   2           case GPIO_P1:  P1 ^= GPIO_Pin ; break; //端口1     
  491   2           case GPIO_P2:  P2 ^= GPIO_Pin ; break; //端口2      
  492   2           case GPIO_P3:  P3 ^= GPIO_Pin ; break; //端口3      
  493   2           case GPIO_P4:  P4 ^= GPIO_Pin ; break; //端口4     
  494   2           case GPIO_P5:  P5 ^= GPIO_Pin ; break; //端口5      
  495   2           case GPIO_P6:  P6 ^= GPIO_Pin ; break; //端口6   
  496   2           case GPIO_P7:  P7 ^= GPIO_Pin ; break; //端口7
  497   2           default:
  498   2           break;        
  499   2         }
  500   1       }
  501           


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1883     ------
  ecode size           =    ------     ------
C251 COMPILER V5.60.0,  CNU_PIE_GPIO                                                       11/10/23  09:28:31  PAGE 9   

  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
