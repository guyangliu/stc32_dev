C251 COMPILER V5.60.0,  CNU_PIE_TIMER                                                      11/10/23  09:28:32  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE CNU_PIE_TIMER
OBJECT MODULE PLACED IN .\Objects\CNU_PIE_TIMER.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\..\..\Libraries\deivers\src\CNU_PIE_TIMER.c XSMALL BROWSE INCDIR(..
                    -\..\..\Libraries\boards\inc;..\..\..\Libraries\startup\inc;..\USER\inc;..\..\..\Libraries\deivers\inc) DEBUG PRINT(.\Lis
                    -tings\CNU_PIE_TIMER.lst) TABS(2) OBJECT(.\Objects\CNU_PIE_TIMER.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           *     COPYRIGHT NOTICE
    3           *     Copyright (c) 2023,CNU_W.PIE
    4           *     All rights reserved.
    5           *
    6           *     除注明出处外，以下所有内容版权均属胖胖个人所有，未经允许，不得用于商业用途，
    7           *     修改内容时必须保留PP的版权声明。
    8           *     Except where indicated, the copyright of all the contents below is owned by PP 
    9           *     and can not be used for commercial purposes without permission. 
   10           *     The copyright notice of PP must be preserved when modifying the content.
   11           *
   12           * @file       CNU_PIE_TIMER.c
   13           * @brief      TIMER
   14           * @author     胖胖
   15           * @version    v1.0
   16           * @note       NULL
   17           * @date       2023-07-26
   18           ********************************************************************************************************
             -************/
   19           
   20          #include "CNU_PIE_TIMER.h"
   21          
   22           /*******************************************************************************************************
             -*******************
   23           * @brief  TIMER初始化函数
   24           * @exampleCode
   25           *      Timer_Count_Init(TIMER3_P04); //初始化定时器3 P04引脚作为计数引脚
   26           * @endcode
   27           * @param[in]  Timer_Count_Pin  定时器计数引脚
   28          *********************************************************************************************************
             -******************/
   29          void Timer_Count_Init(TIMER_COUNT_PIN_Enum Timer_Count_Pin)
   30          {
   31   1        switch(Timer_Count_Pin)
   32   1        {
   33   2          case TIMER0_P34:
   34   2            TL0 = 0;      TH0 = 0; 
   35   2            TMOD |= 0x04; TR0 = 1; break;
   36   2          case TIMER1_P35:
   37   2            TL1 = 0x00;   TH1 = 0x00;
   38   2            TMOD |= 0x40; TR1 = 1; break;
   39   2          case TIMER2_P12:
   40   2            T2L = 0x00;   T2H = 0x00;
   41   2            AUXR |= 0x18;          break;
   42   2          case TIMER3_P04:
   43   2            T3L = 0;      T3H = 0;
   44   2            T4T3M |= 0x0c;         break;
   45   2          case TIMER4_P06:
   46   2            T4L = 0;      T4H = 0;
   47   2            T4T3M |= 0xc0;         break;
   48   2        }
   49   1      }
   50          
   51           /*******************************************************************************************************
             -*******************
   52           * @brief  TIMER读取计数引脚脉冲数据
C251 COMPILER V5.60.0,  CNU_PIE_TIMER                                                      11/10/23  09:28:32  PAGE 2   

   53           * @exampleCode
   54           *      Timer_Count_Read(TIMER3_P04); //定时器3 P04引脚读取计数数值
   55           * @endcode
   56           * @retval   count  计数数据
   57          *********************************************************************************************************
             -******************/
   58          
   59          uint16_t Timer_Count_Read(TIMER_COUNT_PIN_Enum Timer_Count_Pin)
   60          {
   61   1        uint16_t count = 0;
   62   1        switch(Timer_Count_Pin)
   63   1        {
   64   2          case TIMER0_P34:
   65   2               count = (uint16_t)TH0 << 8; count = ((uint8_t)TL0) | count;
   66   2          break;
   67   2          
   68   2          case TIMER1_P35:
   69   2               count = (uint16_t)TH1 << 8; count = ((uint8_t)TL1) | count;
   70   2          break;
   71   2          
   72   2          case TIMER2_P12:
   73   2               count = (uint16_t)T2H << 8; count = ((uint8_t)T2L) | count;
   74   2          break;
   75   2          
   76   2          case TIMER3_P04:
   77   2               count = (uint16_t)T3H << 8; count = ((uint8_t)T3L) | count;  
   78   2          break;
   79   2          
   80   2          case TIMER4_P06:
   81   2               count = (uint16_t)T4H << 8; count = ((uint8_t)T4L) | count;
   82   2          break;
   83   2        }
   84   1        return count;
   85   1      }
   86          
   87           /*******************************************************************************************************
             -*******************
   88           * @brief  TIMER计数清零
   89           * @exampleCode
   90           *      Timer_Count_Clear(TIMER3_P04); //初始化定时器3 P04引脚计数清零
   91           * @endcode
   92          *********************************************************************************************************
             -******************/
   93          void Timer_Count_Clear(TIMER_COUNT_PIN_Enum Timer_Count_Pin)
   94          { 
   95   1        switch(Timer_Count_Pin)
   96   1        {
   97   2          case TIMER0_P34:
   98   2            TR0 = 0; TH0 = 0; TL0 = 0; TR0 = 1; break;
   99   2          case TIMER1_P35:
  100   2            TR1 = 0; TH1 = 0; TL1 = 0; TR1 = 1; break;
  101   2          case TIMER2_P12:
  102   2            AUXR &= ~(1<<4);  T2H = 0; T2L = 0; AUXR |= 1<<4; break;
  103   2          case TIMER3_P04:
  104   2            T4T3M &= ~(1<<3); T3H = 0; T3L = 0; T4T3M |= (1<<3); break;
  105   2          case TIMER4_P06:
  106   2            T4T3M &= ~(1<<7); T4H = 0; T4L = 0; T4T3M |= (1<<7); break;
  107   2        }
  108   1      }
  109          
  110           /*******************************************************************************************************
             -*******************
  111           * @brief  TIMER定时中断初始化
  112           * @exampleCode
  113           *      PIT_Timer_Ms(TIM0 ， 20); //初始化定时器0作为中断源，20ms定时中断
  114           * @endcode
C251 COMPILER V5.60.0,  CNU_PIE_TIMER                                                      11/10/23  09:28:32  PAGE 3   

  115           * @param[in]  Timer_CHN  定时器通道号
  116           * @param[in]  Time       中断时间
  117          *********************************************************************************************************
             -******************/
  118          void PIT_Timer_Ms(TIMER_CHN_Enum Timer_CHN , uint16_t Time)
  119          {
  120   1        uint16_t time_reg;
  121   1        time_reg = (uint16_t)65536 - (uint16_t)(FOSC / (12 * (1000 / Time)));
  122   1        switch(Timer_CHN)
  123   1        {
  124   2          case TIM0:
  125   2          TMOD |= 0x00; TL0 = time_reg; TH0 = time_reg >> 8; TR0 = 1; ET0 = 1;
  126   2          break;
  127   2          case TIM1:
  128   2          TMOD |= 0x00; TL1 = time_reg; TH1 = time_reg >> 8; TR1 = 1; ET1 = 1;
  129   2          break;
  130   2          case TIM2:
  131   2          T2L = time_reg;   T2H = time_reg >> 8;     AUXR |= 0x10; IE2 |= 0x04;
  132   2          break;
  133   2          case TIM3:
  134   2          T3L = time_reg;   T3H = time_reg >> 8;     T4T3M |= 0x08; IE2 |= 0x20;
  135   2          break;
  136   2          case TIM4:
  137   2          T4L = time_reg;   T4H = time_reg >> 8;     T4T3M |= 0x80; IE2 |= 0x40;
  138   2          break;
  139   2        }
  140   1      }
  141           /*******************************************************************************************************
             -*******************
  142           * @brief  TIMER定时中断清空中断标志位
  143           * @exampleCode
  144           *      PIT_Timer_Clear(TIM0); //TIM0中断标志位清空
  145           * @endcode
  146           * @param[in]  Timer_CHN  定时器通道号
  147          *********************************************************************************************************
             -******************/
  148          void PIT_Timer_Clear(TIMER_CHN_Enum Timer_CHN)
  149          {
  150   1        switch(Timer_CHN)
  151   1        {
  152   2          case TIM0: TCON &= ~0x80; break;
  153   2          case TIM1: TCON &= ~0x10; break;
  154   2          case TIM2: AUXINTIF &= ~0x01; break;
  155   2          case TIM3: AUXINTIF &= ~0x02; break;
  156   2          case TIM4: AUXINTIF &= ~0x04; break;
  157   2        }
  158   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       416     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
C251 COMPILER V5.60.0,  CNU_PIE_TIMER                                                      11/10/23  09:28:32  PAGE 4   

End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
